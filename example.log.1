DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Pruned plan enumeration from 16 to 3 implementations.
DEBUG main org.qcri.rheem.core.api.Job - Enumerated 3 plans.
DEBUG main org.qcri.rheem.core.api.Job - Plan with operators: [JavaLocalCallbackSink[collect()], JavaMap[Strip words], JavaTextFileSource[Read corpus (2)], JavaGlobalMaterializedGroup[Group IDs], JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters], JavaMap[Discard word vectors], JavaMap[Discard cluster IDs], JavaMap[Resolve word IDs], JavaFilter[my.udf.SimWords.filter1-Filter frequent words], JavaMap[Convert ID attachment], JavaMap[Add word counter], JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors], JavaMap[Zip with ID], JavaTextFileSource[Read corpus (1)], JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors], JavaMap[Normalize word vectors], JavaMap[Strip word counter], JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters], JavaMap[Identity (wa2)], JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub], JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids], JavaMap[Select nearest final centroids]]
DEBUG main org.qcri.rheem.core.api.Job - Plan with operators: [JavaLocalCallbackSink[collect()], JavaMap[Strip words], JavaTextFileSource[Read corpus (2)], JavaGlobalMaterializedGroup[Group IDs], JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters], JavaMap[Discard word vectors], JavaMap[Discard cluster IDs], JavaMap[Resolve word IDs], JavaFilter[my.udf.SimWords.filter1-Filter frequent words], JavaMap[Convert ID attachment], JavaMap[Add word counter], JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors], JavaMap[Zip with ID], JavaTextFileSource[Read corpus (1)], SparkFlatMap[my.udf.SimWords.flatMap-Generate centroids], JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors], JavaMap[Normalize word vectors], JavaMap[Strip word counter], JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters], JavaMap[Identity (wa2)], JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub], JavaMap[Select nearest final centroids]]
DEBUG main org.qcri.rheem.core.api.Job - Plan with operators: [SparkFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors], SparkMap[Strip words], SparkMap[Discard cluster IDs], SparkMap[Convert ID attachment], SparkMap[Normalize word vectors], SparkReduceBy[my.udf.SimWords.reduceByKey4-Create clusters], SparkMap[Add word counter], SparkReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters], SparkTextFileSource[Read corpus (2)], SparkMap[Resolve word IDs], SparkLocalCallbackSink[collect()], SparkMap[Select nearest final centroids], SparkTextFileSource[Read corpus (1)], SparkReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors], SparkFlatMap[my.udf.SimWords.flatMap-Generate centroids], SparkMap[Discard word vectors], SparkFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub], SparkFilter[my.udf.SimWords.filter1-Filter frequent words], SparkGlobalMaterializedGroup[Group IDs], SparkMap[Strip word counter], SparkMap[Identity (wa2)], SparkZipWithId[Zip with ID]]
INFO main org.qcri.rheem.core.api.Job - Picked PlanImplementation[[Platform[Java Streams]], (0:00:00.376 .. 0:00:03.449, p=4.82%), costs=(376.00..3,449.00 ~ 4.8%) selecitvityKey: ] as best plan.
INFO main org.qcri.rheem.core.api.Job - Compiling execution plan...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting output@JavaTextFileSource[Read corpus (2)] -> Junction[output@JavaTextFileSource[Read corpus (2)]->[in@JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting output@JavaTextFileSource[Read corpus (1)] -> Junction[output@JavaTextFileSource[Read corpus (1)]->[in@JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub] -> Junction[out@JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]->[in@JavaMap[Add word counter]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Add word counter] -> Junction[out@JavaMap[Add word counter]->[in@JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters] -> Junction[out@JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]->[in@JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaFilter[my.udf.SimWords.filter1-Filter frequent words] -> Junction[out@JavaFilter[my.udf.SimWords.filter1-Filter frequent words]->[in@JavaMap[Strip word counter]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Strip word counter] -> Junction[out@JavaMap[Strip word counter]->[in@JavaMap[Zip with ID]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Zip with ID] -> Junction[out@JavaMap[Zip with ID]->[in@JavaMap[Convert ID attachment]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Convert ID attachment] -> Junction[out@JavaMap[Convert ID attachment]->[wordIds@JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors], in@JavaMap[Strip words], wordIds@JavaMap[Resolve word IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors] -> Junction[out@JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]->[in@JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Strip words] -> Junction[out@JavaMap[Strip words]->[in@JavaGlobalMaterializedGroup[Group IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors] -> Junction[out@JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]->[in@JavaMap[Normalize word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaGlobalMaterializedGroup[Group IDs] -> Junction[out@JavaGlobalMaterializedGroup[Group IDs]->[in@JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Normalize word vectors] -> Junction[out@JavaMap[Normalize word vectors]->[in@JavaMap[Select nearest centroids], in@JavaMap[Select nearest final centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids] -> Junction[out@JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]->[initIn@JavaRepeat[K-means iteration]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting iterOut@JavaRepeat[K-means iteration] -> Junction[iterOut@JavaRepeat[K-means iteration]->[centroids@JavaMap[Select nearest centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting finOut@JavaRepeat[K-means iteration] -> Junction[finOut@JavaRepeat[K-means iteration]->[in@JavaMap[Identity (wa2)]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Select nearest centroids] -> Junction[out@JavaMap[Select nearest centroids]->[in@JavaMap[Strip word ID]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Identity (wa2)] -> Junction[out@JavaMap[Identity (wa2)]->[finalCentroids@JavaMap[Select nearest final centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Strip word ID] -> Junction[out@JavaMap[Strip word ID]->[in@JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Select nearest final centroids] -> Junction[out@JavaMap[Select nearest final centroids]->[in@JavaMap[Discard word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words] -> Junction[out@JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]->[in@JavaMap[Normalize centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Discard word vectors] -> Junction[out@JavaMap[Discard word vectors]->[in@JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Normalize centroids] -> Junction[out@JavaMap[Normalize centroids]->[iterIn@JavaRepeat[K-means iteration]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters] -> Junction[out@JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]->[in@JavaMap[Discard cluster IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Discard cluster IDs] -> Junction[out@JavaMap[Discard cluster IDs]->[in@JavaMap[Resolve word IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.ExecutionTaskFlowCompiler$Activator - Connecting out@JavaMap[Resolve word IDs] -> Junction[out@JavaMap[Resolve word IDs]->[in@JavaLocalCallbackSink[collect()]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Established initial stage with [T[JavaRepeat[K-means iteration]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaMap[Add word counter]], T[JavaGlobalMaterializedGroup[Group IDs]], T[JavaTextFileSource[Read corpus (2)]], T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]], T[JavaMap[Resolve word IDs]], T[JavaMap[Strip word ID]], T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Discard word vectors]], T[JavaMap[Convert ID attachment]], T[JavaMap[Normalize word vectors]], T[JavaMap[Strip words]], T[JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]], T[JavaTextFileSource[Read corpus (1)]], T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaMap[Normalize centroids]], T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]], T[JavaMap[Zip with ID]], T[JavaCollect[convert out@JavaMap[Strip words]]], T[JavaLocalCallbackSink[collect()]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Select nearest final centroids]], T[JavaMap[Identity (wa2)]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]], T[JavaMap[Strip word counter]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaRepeat[K-means iteration]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaGlobalMaterializedGroup[Group IDs]], T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]], T[JavaMap[Resolve word IDs]], T[JavaMap[Strip word ID]], T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Discard word vectors]], T[JavaMap[Convert ID attachment]], T[JavaMap[Strip words]], T[JavaMap[Normalize word vectors]], T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaMap[Normalize centroids]], T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]], T[JavaMap[Zip with ID]], T[JavaCollect[convert out@JavaMap[Strip words]]], T[JavaLocalCallbackSink[collect()]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Select nearest final centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Identity (wa2)]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]], T[JavaMap[Strip word counter]]] from [T[JavaMap[Add word counter]], T[JavaTextFileSource[Read corpus (2)]], T[JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]], T[JavaTextFileSource[Read corpus (1)]], T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]], T[JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaRepeat[K-means iteration]], T[JavaMap[Normalize centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaCollect[convert out@JavaMap[Strip words]]], T[JavaLocalCallbackSink[collect()]], T[JavaGlobalMaterializedGroup[Group IDs]], T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Resolve word IDs]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Strip word ID]], T[JavaMap[Discard word vectors]], T[JavaMap[Strip words]], T[JavaMap[Select nearest final centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Identity (wa2)]]] from [T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Convert ID attachment]], T[JavaMap[Normalize word vectors]], T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]], T[JavaMap[Zip with ID]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]], T[JavaMap[Strip word counter]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaRepeat[K-means iteration]], T[JavaMap[Normalize centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaLocalCallbackSink[collect()]], T[JavaGlobalMaterializedGroup[Group IDs]], T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Resolve word IDs]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Strip word ID]], T[JavaMap[Discard word vectors]], T[JavaMap[Select nearest final centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Identity (wa2)]]] from [T[JavaCollect[convert out@JavaMap[Strip words]]], T[JavaMap[Strip words]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaRepeat[K-means iteration]], T[JavaMap[Normalize centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaLocalCallbackSink[collect()]], T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Resolve word IDs]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Strip word ID]], T[JavaMap[Discard word vectors]], T[JavaMap[Select nearest final centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Identity (wa2)]]] from [T[JavaGlobalMaterializedGroup[Group IDs]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaRepeat[K-means iteration]], T[JavaMap[Normalize centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaLocalCallbackSink[collect()]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Resolve word IDs]], T[JavaMap[Select nearest centroids]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Strip word ID]], T[JavaMap[Discard word vectors]], T[JavaMap[Select nearest final centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Identity (wa2)]]] from [T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaMap[Resolve word IDs]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Discard word vectors]], T[JavaLocalCallbackSink[collect()]], T[JavaMap[Select nearest final centroids]], T[JavaMap[Identity (wa2)]]] from [T[JavaRepeat[K-means iteration]], T[JavaMap[Normalize centroids]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaMap[Strip word ID]], T[JavaMap[Select nearest centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaLocalCallbackSink[collect()]], T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaMap[Resolve word IDs]], T[JavaMap[Discard cluster IDs]], T[JavaMap[Select nearest final centroids]], T[JavaMap[Discard word vectors]]] from [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaMap[Identity (wa2)]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaLocalCallbackSink[collect()]], T[JavaMap[Resolve word IDs]], T[JavaMap[Discard cluster IDs]]] from [T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaMap[Discard word vectors]], T[JavaMap[Select nearest final centroids]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaMap[Normalize centroids]], T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Strip word ID]], T[JavaMap[Select nearest centroids]]] from [T[JavaRepeat[K-means iteration]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaMap[Normalize centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]], T[JavaMap[Strip word ID]], T[JavaMap[Select nearest centroids]]] from [T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaMap[Normalize centroids]]] from [T[JavaMap[Strip word ID]], T[JavaMap[Select nearest centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]] from [T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Zip with ID]], T[JavaMap[Convert ID attachment]], T[JavaMap[Normalize word vectors]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]], T[JavaMap[Strip word counter]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaMap[Convert ID attachment]], T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Strip word counter]], T[JavaMap[Zip with ID]]] from [T[JavaMap[Normalize word vectors]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]], T[JavaMap[Add word counter]], T[JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]], T[JavaTextFileSource[Read corpus (1)]]] from [T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]], T[JavaTextFileSource[Read corpus (2)]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Separating [T[JavaTextFileSource[Read corpus (2)]]] from [T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]]...
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize word vectors]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Normalize word vectors]]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest final centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest final centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Select nearest final centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaGlobalMaterializedGroup[Group IDs]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaRepeat[K-means iteration]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Identity (wa2)]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Identity (wa2)]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize word vectors]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Normalize word vectors]]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize word vectors]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Normalize word vectors]]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip words]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Strip words]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaGlobalMaterializedGroup[Group IDs]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaRepeat[K-means iteration]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Identity (wa2)]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Identity (wa2)]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]] to [InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word counter]] to [InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Zip with ID]] to [InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Convert ID attachment]] to [InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Convert ID attachment]]] to [InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize word vectors]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Normalize word vectors]]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip words]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Strip words]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaGlobalMaterializedGroup[Group IDs]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaRepeat[K-means iteration]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]] to [InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Identity (wa2)]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Identity (wa2)]]] to [InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]] to [InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize word vectors]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaCollect[convert out@JavaMap[Normalize word vectors]]] to [InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Strip word ID]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Normalize centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Select nearest centroids]]], InterimStage[T[JavaMap[Normalize centroids]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Select nearest final centroids]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard word vectors]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Discard cluster IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaMap[Resolve word IDs]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Updated required stages of T[JavaLocalCallbackSink[collect()]] to [InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]], InterimStage[T[JavaMap[Discard cluster IDs]]], InterimStage[T[JavaMap[Normalize word vectors]]], InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]], InterimStage[T[JavaMap[Identity (wa2)]]], InterimStage[T[JavaTextFileSource[Read corpus (1)]]], InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]], InterimStage[T[JavaMap[Strip words]]], InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]], InterimStage[T[JavaRepeat[K-means iteration]]], InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]], InterimStage[T[JavaMap[Select nearest final centroids]]], InterimStage[T[JavaTextFileSource[Read corpus (2)]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Normalize word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Strip words]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaRepeat[K-means iteration]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Identity (wa2)]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Select nearest final centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Discard cluster IDs]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Select nearest centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaMap[Normalize centroids]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - No separable tasks found in marked stage InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]]: [T[JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Normalize word vectors]]]: [T[JavaMap[Normalize word vectors]], T[JavaCollect[convert out@JavaMap[Normalize word vectors]]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Strip words]]]: [T[JavaCollect[convert out@JavaMap[Strip words]]], T[JavaMap[Strip words]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaGlobalMaterializedGroup[Group IDs]]]: [T[JavaGlobalMaterializedGroup[Group IDs]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]: [T[JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaRepeat[K-means iteration]]]: [T[JavaRepeat[K-means iteration]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Identity (wa2)]]]: [T[JavaCollect[convert out@JavaMap[Identity (wa2)]]], T[JavaMap[Identity (wa2)]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Select nearest final centroids]]]: [T[JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]], T[JavaMap[Discard word vectors]], T[JavaMap[Select nearest final centroids]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Discard cluster IDs]]]: [T[JavaMap[Resolve word IDs]], T[JavaMap[Discard cluster IDs]], T[JavaLocalCallbackSink[collect()]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]]: [T[JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Select nearest centroids]]]: [T[JavaMap[Strip word ID]], T[JavaMap[Select nearest centroids]], T[JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaMap[Normalize centroids]]]: [T[JavaMap[Normalize centroids]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]]: [T[JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]]]: [T[JavaCollect[convert out@JavaMap[Convert ID attachment]]], T[JavaFilter[my.udf.SimWords.filter1-Filter frequent words]], T[JavaMap[Zip with ID]], T[JavaMap[Convert ID attachment]], T[JavaMap[Strip word counter]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaTextFileSource[Read corpus (1)]]]: [T[JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]], T[JavaMap[Add word counter]], T[JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]], T[JavaTextFileSource[Read corpus (1)]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.StageAssignmentTraversal - Final stage InterimStage[T[JavaTextFileSource[Read corpus (2)]]]: [T[JavaTextFileSource[Read corpus (2)]]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Regular operators
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaLocalCallbackSink[collect()]: (0:00:00.002 .. 0:00:00.003, p=59.27%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Strip words]: (0:00:00.003 .. 0:00:00.004, p=11.61%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaTextFileSource[Read corpus (2)]: (0:00:00.045 .. 0:00:00.051, p=85.50%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaGlobalMaterializedGroup[Group IDs]: (0:00:00.002 .. 0:00:00.002, p=68.56%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaReduceBy[my.udf.SimWords.reduceByKey1-Sum word counters]: (0:00:00.007 .. 0:00:00.098, p=7.24%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Discard word vectors]: (0:00:00.003 .. 0:00:00.116, p=10.71%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Discard cluster IDs]: (0:00:00.003 .. 0:00:00.116, p=8.68%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Resolve word IDs]: (0:00:00.003 .. 0:00:00.117, p=6.61%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaFilter[my.udf.SimWords.filter1-Filter frequent words]: (0:00:00.003 .. 0:00:00.004, p=12.90%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Convert ID attachment]: (0:00:00.003 .. 0:00:00.004, p=11.61%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Add word counter]: (0:00:00.004 .. 0:00:00.116, p=14.62%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaReduceBy[my.udf.SimWords.reduceByKey2-Add word vectors]: (0:00:00.008 .. 0:00:00.210, p=6.58%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Zip with ID]: (0:00:00.003 .. 0:00:00.003, p=5.80%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaTextFileSource[Read corpus (1)]: (0:00:00.045 .. 0:00:00.051, p=85.50%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaFlatMap[my.udf.SimWords.flatMapJava2-Create word vectors]: (0:00:00.073 .. 0:00:00.182, p=12.38%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Normalize word vectors]: (0:00:00.003 .. 0:00:00.116, p=11.84%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Strip word counter]: (0:00:00.003 .. 0:00:00.004, p=11.61%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaReduceBy[my.udf.SimWords.reduceByKey4-Create clusters]: (0:00:00.004 .. 0:00:00.210, p=4.82%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Identity (wa2)]: (0:00:00.003 .. 0:00:00.003, p=10.71%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaFlatMap[my.udf.SimWords.flatMapJava1-Split & scrub]: (0:00:00.073 .. 0:00:00.181, p=16.24%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaFlatMap[my.udf.SimWords.flatMap-Generate centroids]: (0:00:00.040 .. 0:00:00.040, p=18.00%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Select nearest final centroids]: (0:00:00.003 .. 0:00:00.116, p=8.24%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Glue operators
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaCollect[convert out@JavaMap[Strip words]]: (0:00:00.002 .. 0:00:00.002, p=52.23%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaCollect[convert out@JavaMap[Normalize word vectors]]: (0:00:00.002 .. 0:00:00.003, p=53.29%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaCollect[convert out@JavaMap[Identity (wa2)]]: (0:00:00.002 .. 0:00:00.002, p=48.20%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaCollect[convert out@JavaMap[Convert ID attachment]]: (0:00:00.002 .. 0:00:00.002, p=52.23%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Loops
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Regular operators
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Normalize centroids]: (0:00:00.003 .. 0:00:00.003, p=10.71%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Select nearest centroids]: (0:00:00.004 .. 0:00:00.630, p=8.41%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaRepeat[K-means iteration]: (0:00:00.002 .. 0:00:00.002, p=48.20%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaReduceBy[my.udf.SimWords.reduceByKey3-Add up cluster words]: (0:00:00.008 .. 0:00:00.475, p=5.41%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaMap[Strip word ID]: (0:00:00.003 .. 0:00:00.571, p=10.93%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Glue operators
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - Estimated execution time of JavaCollect[convert iterOut@JavaRepeat[K-means iteration]]: (0:00:00.012 .. 0:00:00.012, p=49.17%)
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanImplementation - >>> Loops
WARN main org.qcri.rheem.core.profiling.CardinalityRepository - Cardinality repository currently disabled.
INFO main org.qcri.rheem.core.profiling.ExecutionLog - Curating execution log at /home/jonas.kemper/.rheem/executions.json.
INFO main org.qcri.rheem.core.api.Job - Accumulated execution time: 0:00:00.000 (0 ms) (effective: 0:00:00.000 (0 ms), overhead: 0:00:00.000 (0 ms))
INFO main org.qcri.rheem.core.api.Job - Estimated execution time (plan 1): (0:00:00.376 .. 0:00:03.449, p=4.82%)
INFO main org.qcri.rheem.core.api.Job - Accumulated costs: 0.00 .. 0.00
INFO main org.qcri.rheem.core.api.Job - Estimated costs (plan 1): (376.00..3,449.00 ~ 4.8%) selecitvityKey: 
INFO main org.qcri.rheem.core.api.Job - Plan metrics: 27 virtual operators, 54 execution operators, 27 alternatives, 134217728 combinations
INFO main org.qcri.rheem.core.api.Job - StopWatch results:
* Optimization                            - 0:00:02.090
  * Prepare                               - 0:00:00.141
    * Prune&Isolate                       - 0:00:00.020
    * Transformations                     - 0:00:00.121
    * Sanity                              - 0:00:00.000
  * Cardinality&Load Estimation           - 0:00:01.253
    * Create c                            - 0:00:01.253
    * Create CardinalityEstimationManager - 0:00:00.000
    * Push Estimation                     - 0:00:01.237
      * Estimate source cardinalities     - 0:00:01.142
  * Create Initial Execution Plan         - 0:00:00.695
    * Enumerate                           - 0:00:00.643
      * Concatenation                     - 0:00:00.410
        * Channel Conversion              - 0:00:00.380
      * Prune                             - 0:00:00.180
    * Pick Best Plan                      - 0:00:00.003
    * Split Stages                        - 0:00:00.041
* Execution                               - 0:00:00.007
  * Execution 0                           - 0:00:00.007
* Post-processing                         - 0:00:00.005
  * Log measurements                      - 0:00:00.005
  * Release Resources                     - 0:00:00.000
DEBUG Thread-2 org.apache.hadoop.ipc.Client - stopping client from cache: org.apache.hadoop.ipc.Client@69653e16
DEBUG Thread-2 org.apache.hadoop.ipc.Client - removing client from cache: org.apache.hadoop.ipc.Client@69653e16
DEBUG Thread-2 org.apache.hadoop.ipc.Client - stopping actual client because no more references remain: org.apache.hadoop.ipc.Client@69653e16
DEBUG Thread-2 org.apache.hadoop.ipc.Client - Stopping client
DEBUG IPC Client (632071960) connection to thor01/172.16.64.55:8020 from jonas.kemper org.apache.hadoop.ipc.Client - IPC Client (632071960) connection to thor01/172.16.64.55:8020 from jonas.kemper: closed
DEBUG IPC Client (632071960) connection to thor01/172.16.64.55:8020 from jonas.kemper org.apache.hadoop.ipc.Client - IPC Client (632071960) connection to thor01/172.16.64.55:8020 from jonas.kemper: stopped, remaining connections 0
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.api.Configuration - Using configuration at file:/home/jonas.kemper/MA-Scripts/benchmark-thor-validation-July10-11uhr49.properties.
INFO main org.qcri.rheem.core.util.fs.HadoopFileSystem - Adding handler for HDFS URLs.
DEBUG main org.apache.hadoop.metrics2.lib.MutableMetricsFactory - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginSuccess with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, valueName=Time, value=[Rate of successful kerberos logins and latency (milliseconds)])
DEBUG main org.apache.hadoop.metrics2.lib.MutableMetricsFactory - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginFailure with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, valueName=Time, value=[Rate of failed kerberos logins and latency (milliseconds)])
DEBUG main org.apache.hadoop.metrics2.lib.MutableMetricsFactory - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.getGroups with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, valueName=Time, value=[GetGroups])
DEBUG main org.apache.hadoop.metrics2.impl.MetricsSystemImpl - UgiMetrics, User and group related metrics
DEBUG main org.apache.hadoop.security.authentication.util.KerberosName - Kerberos krb5 configuration not found, setting default realm to empty
DEBUG main org.apache.hadoop.security.Groups -  Creating new Groups object
DEBUG main org.apache.hadoop.util.NativeCodeLoader - Trying to load the custom-built native-hadoop library...
DEBUG main org.apache.hadoop.util.NativeCodeLoader - Failed to load native-hadoop with error: java.lang.UnsatisfiedLinkError: no hadoop in java.library.path
DEBUG main org.apache.hadoop.util.NativeCodeLoader - java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
WARN main org.apache.hadoop.util.NativeCodeLoader - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
DEBUG main org.apache.hadoop.util.PerformanceAdvisory - Falling back to shell based
DEBUG main org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback - Group mapping impl=org.apache.hadoop.security.ShellBasedUnixGroupsMapping
DEBUG main org.apache.hadoop.util.Shell - setsid exited with exit code 0
DEBUG main org.apache.hadoop.security.Groups - Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback; cacheTimeout=300000; warningDeltaMs=5000
DEBUG main org.apache.hadoop.security.UserGroupInformation - hadoop login
DEBUG main org.apache.hadoop.security.UserGroupInformation - hadoop login commit
DEBUG main org.apache.hadoop.security.UserGroupInformation - using local user:UnixPrincipal: jonas.kemper
DEBUG main org.apache.hadoop.security.UserGroupInformation - Using user: "UnixPrincipal: jonas.kemper" with name jonas.kemper
DEBUG main org.apache.hadoop.security.UserGroupInformation - User entry: "jonas.kemper"
DEBUG main org.apache.hadoop.security.UserGroupInformation - UGI loginUser:jonas.kemper (auth:SIMPLE)
DEBUG main  - address: thor01/172.16.64.55 isLoopbackAddress: false, with host 172.16.64.55 thor01
DEBUG main io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework
DEBUG main io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available
DEBUG main io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available
DEBUG main io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available
DEBUG main io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: true
DEBUG main io.netty.util.internal.PlatformDependent - Java version: 8
DEBUG main io.netty.util.internal.PlatformDependent - -Dio.netty.noUnsafe: false
DEBUG main io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available
DEBUG main io.netty.util.internal.PlatformDependent - -Dio.netty.noJavassist: false
DEBUG main io.netty.util.internal.PlatformDependent - Javassist: unavailable
DEBUG main io.netty.util.internal.PlatformDependent - You don't have Javassist in your class path or you don't have enough permission to load dynamically generated classes.  Please check the configuration for better performance.
DEBUG main io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
DEBUG main io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)
DEBUG main io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false
DEBUG main io.netty.util.internal.NativeLibraryLoader - -Dio.netty.tmpdir: /tmp (java.io.tmpdir)
DEBUG main io.netty.util.internal.NativeLibraryLoader - -Dio.netty.netty.workdir: /tmp (io.netty.tmpdir)
