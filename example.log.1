DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.548 .. 0:05:36.252, p=0.01%): [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.450 .. 0:05:35.117, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.306 .. 0:08:35.818, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.448 .. 0:05:35.128, p=0.01%): [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.304 .. 0:08:35.829, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.706 .. 0:05:34.575, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:15.182 .. 0:05:27.166, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.800 .. 0:05:35.561, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.776 .. 0:05:32.652, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.402 .. 0:05:39.470, p=0.01%) < (0:00:20.548 .. 0:05:36.252, p=0.01%): Choosing [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:20.448 .. 0:05:35.128, p=0.01%) < (0:00:20.402 .. 0:05:39.470, p=0.01%): Choosing [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.800 .. 0:05:35.561, p=0.01%) < (0:00:20.448 .. 0:05:35.128, p=0.01%): Choosing [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]] over [SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.776 .. 0:05:32.652, p=0.01%) < (0:00:19.800 .. 0:05:35.561, p=0.01%): Choosing [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.678 .. 0:05:31.517, p=0.01%) < (0:00:19.824 .. 0:05:28.299, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.678 .. 0:05:31.517, p=0.01%) < (0:00:20.450 .. 0:05:35.117, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.678 .. 0:05:31.517, p=0.01%) < (0:00:43.306 .. 0:08:35.818, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.678 .. 0:05:31.517, p=0.01%) < (0:00:19.706 .. 0:05:34.575, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkMap[Hotfix], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Pruned plan enumeration from 12 to 4 implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Execute ConcatenationActivator[out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e]: PlanEnumeration[4x, inputs=[in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]], outputs=[out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e]]] -> [PlanEnumeration[4x, inputs=[in@Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 3c0be339]], outputs=[]]]] (open inputs: [in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]]).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 4x4 plan implementations.
INFO main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 2*2=4 concatenation groups (out@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e] -> 1 inputs).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=67fc2aad] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=67fc2aad] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=56f521c6] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=56f521c6] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=680a66dd] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=680a66dd] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=680a66dd] to (0:00:00.032 .. 0:00:00.283, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=2dd8239] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=472698d] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=7b7683d4] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=40712ee9] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSource[0->1, id=40712ee9] to (0:00:00.752 .. 0:00:08.293, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=2e53b094] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=2e53b094] to (0:00:00.138 .. 0:00:01.398, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=39fa8ad2] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=76ddd61a] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=76ddd61a] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCache[1->1, id=76ddd61a] to (0:00:01.002 .. 0:00:11.056, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=3f92a84e] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=3f92a84e] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=cf67838] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=cf67838] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=cf67838] to (0:00:00.032 .. 0:00:00.283, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=6137cf6e] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=7942a854] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=7942a854] to (0:00:00.138 .. 0:00:01.398, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=53b8afea] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=5fcfca62] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=5fcfca62] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=5fcfca62] to (0:00:00.032 .. 0:00:00.283, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=341672e] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=341672e] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkBroadcast[1->1, id=2bebb74f] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkBroadcast[1->1, id=2bebb74f] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=58cf8f94] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=6e33fcae] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=6e33fcae] to (0:00:00.102 .. 0:00:01.107, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=66c38e51] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=10641c09] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=34f392be] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSource[0->1, id=34f392be] to (0:00:00.188 .. 0:00:01.951, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=4554de02] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=3f9f71ff] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=3f9f71ff] to (0:00:01.936 .. 0:00:21.373, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=fabb651] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=27e5b378] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=27e5b378] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=27e5b378] to (0:00:00.014 .. 0:00:00.140, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=4422dd48] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=764cba] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=764cba] to (0:00:01.936 .. 0:00:21.373, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=523d6bdb] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=3872bc37] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=3872bc37] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=3872bc37] to (0:00:00.014 .. 0:00:00.140, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=12968227] from null to (1,350,261..14,923,942, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=12968227] to (0:00:00.102 .. 0:00:01.107, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Created 16 plan implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - 16 implementations for scope [Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join2-Join target vertex IDs]]], 157853da], Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join3-Join page ranks with vertex IDs]]], 343570b7], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct2-Distinct vertices]]], 15ca7889], Alternative[3x ~Alternative[[Map[Set source vertex ID]]], 687e99d8], Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], Alternative[4x ~Alternative[[PageRank[1->1, id=4cc451f2]]], 3fb1549b], Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af], Alternative[3x ~Alternative[[Map[PageRank (forward)]]], 2a54a73f], Alternative[3x ~Alternative[[Count[PageRank (count vertices)]]], 22ef9844], Alternative[3x ~Alternative[[Map[Set target vertex ID]]], 757277dc], Alternative[3x ~Alternative[[Map[PageRank (initialize ranks)]]], 78123e82], Alternative[3x ~Alternative[[Map[PageRank (prepare adjacencies)]]], bd4dc25], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 3c0be339], Alternative[3x ~Alternative[[Map[Make page ranks readable]]], 49e5f737], Alternative[3x ~Alternative[[Distinct[PageRank (distinct vertices)]]], 1da2cb77], Alternative[3x ~Alternative[[ReduceBy[PageRank (create adjacencies)]]], 7133da86], Alternative[3x ~Alternative[[Map[Hotfix]]], 5c671d7f], Alternative[3x ~Alternative[[FlatMap[PageRank (extract vertices)]]], 2b91004a], Alternative[3x ~Alternative[[FlatMap[my.udf.CrocoPR.flatMap-Flatten vertices]]], 6f45df59], Alternative[3x ~Alternative[[ZipWithId[Add vertex IDs]]], 671a5887], Alternative[3x ~Alternative[[Join[y.udf.CrocoPR.join1-Join source vertex IDs]]], 71c3b41], Alternative[3x ~Alternative[[LocalCallbackSink[collect()]]], 4c309d4d]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.960 .. 0:05:44.533, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.942 .. 0:05:39.399, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.956 .. 0:05:44.384, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.938 .. 0:05:39.250, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.941 .. 0:05:39.398, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:15.313 .. 0:05:38.505, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.937 .. 0:05:39.249, p=0.01%): [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:19.809 .. 0:05:42.856, p=0.01%): [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.022 .. 0:05:45.236, p=0.01%): [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.004 .. 0:05:40.102, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.550 .. 0:08:48.413, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.532 .. 0:08:43.279, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.151 .. 0:05:41.631, p=0.01%): [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.023 .. 0:05:45.238, p=0.01%): [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.679 .. 0:08:44.808, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:43.551 .. 0:08:48.415, p=0.01%): [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.938 .. 0:05:39.250, p=0.01%) < (0:00:19.942 .. 0:05:39.399, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.938 .. 0:05:39.250, p=0.01%) < (0:00:20.004 .. 0:05:40.102, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.956 .. 0:05:44.384, p=0.01%) < (0:00:19.960 .. 0:05:44.533, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.956 .. 0:05:44.384, p=0.01%) < (0:00:20.022 .. 0:05:45.236, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.956 .. 0:05:44.384, p=0.01%) < (0:00:43.550 .. 0:08:48.413, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.937 .. 0:05:39.249, p=0.01%) < (0:00:19.941 .. 0:05:39.398, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.937 .. 0:05:39.249, p=0.01%) < (0:00:20.151 .. 0:05:41.631, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.937 .. 0:05:39.249, p=0.01%) < (0:00:43.679 .. 0:08:44.808, p=0.01%): Choosing [JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.809 .. 0:05:42.856, p=0.01%) < (0:00:20.023 .. 0:05:45.238, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaMap[Parse lines], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:19.809 .. 0:05:42.856, p=0.01%) < (0:00:43.551 .. 0:08:48.415, p=0.01%): Choosing [JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], JavaMap[Parse lines], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], JavaUnionAll[Union links], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Pruned plan enumeration from 16 to 6 implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - Execute ConcatenationActivator[out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b]: PlanEnumeration[4x, inputs=[], outputs=[out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b]]] -> [PlanEnumeration[6x, inputs=[in1@Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], in@Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af]], outputs=[]]]] (open inputs: []).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 4x6 plan implementations.
INFO main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Concatenating 2*2=4 concatenation groups (out@Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b] -> 1 inputs).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=9e2ad91] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=9e2ad91] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkBroadcast[1->1, id=64524dd] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkBroadcast[1->1, id=64524dd] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=79d06bbd] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=47a7a101] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=47a7a101] to (0:00:00.101 .. 0:00:01.105, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=5bb51241] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=7479b626] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=e8ea697] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSource[0->1, id=e8ea697] to (0:00:00.187 .. 0:00:01.947, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=74dbb1ee] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=70f822e] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=70f822e] to (0:00:01.932 .. 0:00:21.329, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=3efedc6f] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=45bf6f39] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=45bf6f39] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=45bf6f39] to (0:00:00.014 .. 0:00:00.140, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=6c42f2a1] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaObjectFileSink[1->0, id=17a703f5] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSink[1->0, id=17a703f5] to (0:00:01.932 .. 0:00:21.329, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaTsvFileSink[1->0, id=5ff2b8ca] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@JavaCollect[1->1, id=3531f3ca] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaCollect[1->1, id=3531f3ca] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaCollect[1->1, id=3531f3ca] to (0:00:00.014 .. 0:00:00.140, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollectionSource[0->1, id=4867ab9f] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollectionSource[0->1, id=4867ab9f] to (0:00:00.101 .. 0:00:01.105, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=64968732] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=64968732] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=3e1a3801] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=3e1a3801] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=6fd12c5] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=6fd12c5] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=6fd12c5] to (0:00:00.031 .. 0:00:00.282, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=1de0a46c] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkObjectFileSource[0->1, id=4d1f1ff5] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=222afc67] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@JavaObjectFileSource[0->1, id=4c2fb9dd] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of JavaObjectFileSource[0->1, id=4c2fb9dd] to (0:00:00.751 .. 0:00:08.276, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=54f4a7f0] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=54f4a7f0] to (0:00:00.137 .. 0:00:01.395, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=61a1ea2c] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCache[1->1, id=149debbb] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCache[1->1, id=149debbb] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCache[1->1, id=149debbb] to (0:00:01.000 .. 0:00:11.033, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=25cd49a4] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=25cd49a4] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=5477a1ca] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=5477a1ca] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=5477a1ca] to (0:00:00.031 .. 0:00:00.282, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=3ae9d1e2] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkObjectFileSink[1->0, id=41522537] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkObjectFileSink[1->0, id=41522537] to (0:00:00.137 .. 0:00:01.395, p=76.95%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkTsvFileSink[1->0, id=e9dc4d0] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of in@SparkCollect[1->1, id=43b40233] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Changing cardinality of out@SparkCollect[1->1, id=43b40233] from null to (1,347,463..14,893,017, 85.50%).
DEBUG main org.qcri.rheem.core.optimizer.DefaultOptimizationContext - Setting time estimate of SparkCollect[1->1, id=43b40233] to (0:00:00.031 .. 0:00:00.282, p=65.79%).
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumeration - Created 24 plan implementations.
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - 24 implementations for scope [Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join2-Join target vertex IDs]]], 157853da], Alternative[3x ~Alternative[[Join[my.udf.CrocoPR.join3-Join page ranks with vertex IDs]]], 343570b7], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct2-Distinct vertices]]], 15ca7889], Alternative[3x ~Alternative[[TextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl]]], 609cd4d8], Alternative[3x ~Alternative[[Map[Set source vertex ID]]], 687e99d8], Alternative[3x ~Alternative[[UnionAll[Union links]]], 3f56875e], Alternative[4x ~Alternative[[PageRank[1->1, id=4cc451f2]]], 3fb1549b], Alternative[3x ~Alternative[[Map[Parse lines]]], e4487af], Alternative[3x ~Alternative[[Map[PageRank (forward)]]], 2a54a73f], Alternative[3x ~Alternative[[Count[PageRank (count vertices)]]], 22ef9844], Alternative[3x ~Alternative[[Map[Set target vertex ID]]], 757277dc], Alternative[3x ~Alternative[[Map[PageRank (initialize ranks)]]], 78123e82], Alternative[3x ~Alternative[[Map[PageRank (prepare adjacencies)]]], bd4dc25], Alternative[3x ~Alternative[[Filter[Filter comments]]], 5609159b], Alternative[3x ~Alternative[[Distinct[my.udf.CrocoPR.distinct1-Distinct links]]], 3c0be339], Alternative[3x ~Alternative[[Map[Make page ranks readable]]], 49e5f737], Alternative[3x ~Alternative[[Distinct[PageRank (distinct vertices)]]], 1da2cb77], Alternative[3x ~Alternative[[ReduceBy[PageRank (create adjacencies)]]], 7133da86], Alternative[3x ~Alternative[[Map[Hotfix]]], 5c671d7f], Alternative[3x ~Alternative[[FlatMap[PageRank (extract vertices)]]], 2b91004a], Alternative[3x ~Alternative[[FlatMap[my.udf.CrocoPR.flatMap-Flatten vertices]]], 6f45df59], Alternative[3x ~Alternative[[ZipWithId[Add vertex IDs]]], 671a5887], Alternative[3x ~Alternative[[Join[y.udf.CrocoPR.join1-Join source vertex IDs]]], 71c3b41], Alternative[3x ~Alternative[[LocalCallbackSink[collect()]]], 4c309d4d]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.242 .. 0:05:53.338, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.972 .. 0:05:56.357, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.243 .. 0:05:53.339, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.973 .. 0:05:56.358, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:45.837 .. 0:08:57.368, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], SparkMap[Make page ranks readable], JavaFilter[Filter comments], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:48.567 .. 0:09:00.387, p=0.01%): [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.832 .. 0:05:52.081, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.720 .. 0:05:47.535, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.833 .. 0:05:52.082, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.721 .. 0:05:47.536, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:50.427 .. 0:08:56.111, p=0.01%): [SparkMap[Make page ranks readable], JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkFilter[Filter comments], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:46.315 .. 0:08:51.565, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], SparkMap[Make page ranks readable], SparkDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkLocalCallbackSink[collect()], SparkFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], SparkPageRank[1->1, id=3e84448c], SparkMap[Set target vertex ID], SparkMap[Set source vertex ID], SparkMap[Parse lines], SparkJoin[my.udf.CrocoPR.join2-Join target vertex IDs], SparkFilter[Filter comments], SparkUnionAll[Union links], SparkDistinct[my.udf.CrocoPR.distinct1-Distinct links], SparkJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkZipWithId[Add vertex IDs], SparkMap[Hotfix], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:21.999 .. 0:05:55.700, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.729 .. 0:05:58.719, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.146 .. 0:05:57.228, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:24.876 .. 0:06:00.247, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.003 .. 0:05:55.849, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:20.233 .. 0:05:54.368, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.735 .. 0:05:55.970, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.623 .. 0:05:51.424, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.882 .. 0:05:57.498, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.770 .. 0:05:52.952, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], SparkUnionAll[Union links], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:26.739 .. 0:05:56.119, p=0.01%): [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.PlanEnumerator - (0:00:22.627 .. 0:05:51.573, p=0.01%): [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]]
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:22.242 .. 0:05:53.338, p=0.01%) < (0:00:24.972 .. 0:05:56.357, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:22.242 .. 0:05:53.338, p=0.01%) < (0:00:26.832 .. 0:05:52.081, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:22.720 .. 0:05:47.535, p=0.01%) < (0:00:22.242 .. 0:05:53.338, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:22.720 .. 0:05:47.535, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], SparkMap[Parse lines], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:24.729 .. 0:05:58.719, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:22.003 .. 0:05:55.849, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:26.735 .. 0:05:55.970, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:22.623 .. 0:05:51.424, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]].
DEBUG main org.qcri.rheem.core.optimizer.enumeration.LatentOperatorPruningStrategy - (0:00:21.999 .. 0:05:55.700, p=0.01%) < (0:00:26.739 .. 0:05:56.119, p=0.01%): Choosing [SparkTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaFilter[Filter comments], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], SparkJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaMap[Set source vertex ID]] over [JavaTextFileSource[Load hdfs://thor01/data/rdf/dbpedia/dbpedia-2016-04/page_links_en_uris_de-0_5.ttl], JavaMap[Parse lines], JavaDistinct[my.udf.CrocoPR.distinct1-Distinct links], JavaFlatMap[my.udf.CrocoPR.flatMap-Flatten vertices], JavaMap[Hotfix], JavaJoin[y.udf.CrocoPR.join1-Join source vertex IDs], JavaUnionAll[Union links], JavaLocalCallbackSink[collect()], JavaPageRank[1->1, id=6f46426d], JavaJoin[my.udf.CrocoPR.join3-Join page ranks with vertex IDs], JavaMap[Add vertex IDs], JavaMap[Set target vertex ID], SparkFilter[Filter comments], JavaMap[Make page ranks readable], JavaJoin[my.udf.CrocoPR.join2-Join target vertex IDs], JavaDistinct[my.udf.CrocoPR.distinct2-Distinct vertices], JavaMap[Set source vertex ID]].
